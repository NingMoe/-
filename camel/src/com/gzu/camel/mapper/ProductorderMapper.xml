<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gzu.camel.mapper.ProductorderMapper" >
  <resultMap id="BaseResultMap" type="com.gzu.camel.pojo.Productorder" >
    <id column="orderid" property="orderid" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="storeid" property="storeid" jdbcType="INTEGER" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="uphone" property="uphone" jdbcType="VARCHAR" />
    <result column="uaddr" property="uaddr" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderid, userid, pid, number, storeid, pname, uphone, uaddr, total
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gzu.camel.pojo.ProductorderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from productorder
    where orderid = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from productorder
    where orderid = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gzu.camel.pojo.ProductorderExample" >
    delete from productorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gzu.camel.pojo.Productorder" >
    insert into productorder (orderid, userid, pid, 
      number, storeid, pname, 
      uphone, uaddr, total
      )
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{storeid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, 
      #{uphone,jdbcType=VARCHAR}, #{uaddr,jdbcType=VARCHAR}, #{total,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gzu.camel.pojo.Productorder" >
    insert into productorder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="storeid != null" >
        storeid,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="uphone != null" >
        uphone,
      </if>
      <if test="uaddr != null" >
        uaddr,
      </if>
      <if test="total != null" >
        total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="storeid != null" >
        #{storeid,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="uphone != null" >
        #{uphone,jdbcType=VARCHAR},
      </if>
      <if test="uaddr != null" >
        #{uaddr,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gzu.camel.pojo.ProductorderExample" resultType="java.lang.Integer" >
    select count(*) from productorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update productorder
    <set >
      <if test="record.orderid != null" >
        orderid = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.storeid != null" >
        storeid = #{record.storeid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.uphone != null" >
        uphone = #{record.uphone,jdbcType=VARCHAR},
      </if>
      <if test="record.uaddr != null" >
        uaddr = #{record.uaddr,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update productorder
    set orderid = #{record.orderid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      storeid = #{record.storeid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      uphone = #{record.uphone,jdbcType=VARCHAR},
      uaddr = #{record.uaddr,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gzu.camel.pojo.Productorder" >
    update productorder
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="storeid != null" >
        storeid = #{storeid,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="uphone != null" >
        uphone = #{uphone,jdbcType=VARCHAR},
      </if>
      <if test="uaddr != null" >
        uaddr = #{uaddr,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DOUBLE},
      </if>
    </set>
    where orderid = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gzu.camel.pojo.Productorder" >
    update productorder
    set userid = #{userid,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      storeid = #{storeid,jdbcType=INTEGER},
      pname = #{pname,jdbcType=VARCHAR},
      uphone = #{uphone,jdbcType=VARCHAR},
      uaddr = #{uaddr,jdbcType=VARCHAR},
      total = #{total,jdbcType=DOUBLE}
    where orderid = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>