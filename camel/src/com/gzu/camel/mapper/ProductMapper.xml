<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gzu.camel.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.gzu.camel.pojo.Product" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="storeid" property="storeid" jdbcType="INTEGER" />
    <result column="typeid" property="typeid" jdbcType="INTEGER" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="pprice" property="pprice" jdbcType="DOUBLE" />
    <result column="pdes" property="pdes" jdbcType="VARCHAR" />
    <result column="pno" property="pno" jdbcType="INTEGER" />
    <result column="pimageno" property="pimageno" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pid, storeid, typeid, pname, pprice, pdes, pno, pimageno
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gzu.camel.pojo.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gzu.camel.pojo.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gzu.camel.pojo.Product" >
    insert into product (pid, storeid, typeid, 
      pname, pprice, pdes, 
      pno, pimageno)
    values (#{pid,jdbcType=INTEGER}, #{storeid,jdbcType=INTEGER}, #{typeid,jdbcType=INTEGER}, 
      #{pname,jdbcType=VARCHAR}, #{pprice,jdbcType=DOUBLE}, #{pdes,jdbcType=VARCHAR}, 
      #{pno,jdbcType=INTEGER}, #{pimageno,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gzu.camel.pojo.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="storeid != null" >
        storeid,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="pprice != null" >
        pprice,
      </if>
      <if test="pdes != null" >
        pdes,
      </if>
      <if test="pno != null" >
        pno,
      </if>
      <if test="pimageno != null" >
        pimageno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="storeid != null" >
        #{storeid,jdbcType=INTEGER},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="pprice != null" >
        #{pprice,jdbcType=DOUBLE},
      </if>
      <if test="pdes != null" >
        #{pdes,jdbcType=VARCHAR},
      </if>
      <if test="pno != null" >
        #{pno,jdbcType=INTEGER},
      </if>
      <if test="pimageno != null" >
        #{pimageno,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gzu.camel.pojo.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.storeid != null" >
        storeid = #{record.storeid,jdbcType=INTEGER},
      </if>
      <if test="record.typeid != null" >
        typeid = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.pprice != null" >
        pprice = #{record.pprice,jdbcType=DOUBLE},
      </if>
      <if test="record.pdes != null" >
        pdes = #{record.pdes,jdbcType=VARCHAR},
      </if>
      <if test="record.pno != null" >
        pno = #{record.pno,jdbcType=INTEGER},
      </if>
      <if test="record.pimageno != null" >
        pimageno = #{record.pimageno,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set pid = #{record.pid,jdbcType=INTEGER},
      storeid = #{record.storeid,jdbcType=INTEGER},
      typeid = #{record.typeid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      pprice = #{record.pprice,jdbcType=DOUBLE},
      pdes = #{record.pdes,jdbcType=VARCHAR},
      pno = #{record.pno,jdbcType=INTEGER},
      pimageno = #{record.pimageno,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gzu.camel.pojo.Product" >
    update product
    <set >
      <if test="storeid != null" >
        storeid = #{storeid,jdbcType=INTEGER},
      </if>
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="pprice != null" >
        pprice = #{pprice,jdbcType=DOUBLE},
      </if>
      <if test="pdes != null" >
        pdes = #{pdes,jdbcType=VARCHAR},
      </if>
      <if test="pno != null" >
        pno = #{pno,jdbcType=INTEGER},
      </if>
      <if test="pimageno != null" >
        pimageno = #{pimageno,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gzu.camel.pojo.Product" >
    update product
    set storeid = #{storeid,jdbcType=INTEGER},
      typeid = #{typeid,jdbcType=INTEGER},
      pname = #{pname,jdbcType=VARCHAR},
      pprice = #{pprice,jdbcType=DOUBLE},
      pdes = #{pdes,jdbcType=VARCHAR},
      pno = #{pno,jdbcType=INTEGER},
      pimageno = #{pimageno,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  
  
  
   <!-- 在此处写自定义sql，方便管理 -->
  	
  <select id="countByProductName" parameterType="String" resultType="Integer">
  	select count(*) from product where pname like '%${value}%'
  </select>
  
<!--   分頁 -->
  <select id="selectSplitPage" parameterType="productSplitPageVo" resultType="product">
   <!-- SELECT product.pid,store.sname FROM product,store WHERE product.storeid=store.storeid 
			   AND product.typeid=1 
			   AND product.pname LIKE '%${ProductCustom。pname}%' LIMIT 1,1 -->
	    SELECT * FROM product,store WHERE product.storeid=store.storeid
	   		<if test="productCustom.typeid !=null">
	   			AND product.typeid= #{productCustom.typeid}
	   		</if>
	   		 <if test="productCustom.pname !=null">
	   			AND product.pname LIKE '%${productCustom.pname}%'
	   		</if> 
	   		<if test="productCustom.start !=null || productCustom.pageSize !=null">
	   			LIMIT #{productCustom.start},#{productCustom.pageSize}
	   		</if>
  </select>
  
<!-- 商品詳情 -->

<select id="selectProductDetails" parameterType="String" resultType="productCustom">
select store.sname,product.pname,product.pprice,product.pdes,product.pno,product.pimageno from product,store where product.storeid=store.storeid
</select>
</mapper>